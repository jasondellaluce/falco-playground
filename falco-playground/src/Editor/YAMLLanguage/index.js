import { ExternalTokenizer, ContextTracker, LRParser } from '@lezer/lr';
import { styleTags, tags } from '@lezer/highlight';
import { HighlightStyle, LRLanguage, LanguageSupport } from '@codemirror/language';

// This file was generated by lezer-generator. You probably shouldn't edit it.
const indent = 22,
  dedent = 23,
  newline$1 = 24,
  newlineEmpty = 25;

const newline = 10,
  carriageReturn = 13,
  space = 32,
  tab = 9,
  hash = 35;

const newlines = new ExternalTokenizer(
  (input, stack) => {
    if (input.next === newline || input.next === carriageReturn) {
      input.advance();
      let spaces = 0;
      while (input.next === space || input.next === tab) {
        input.advance();
        spaces++;
      }
      let empty = input.next === newline || input.next === carriageReturn || input.next === hash;
      input.acceptToken(empty ? newlineEmpty : newline$1, -spaces);
    }
  },
  { contextual: true, fallback: true }
);

const indentation = new ExternalTokenizer((input, stack) => {
  let cDepth = stack.context.depth;
  if (cDepth < 0) {
    return;
  }
  let prev = input.peek(-1);
  if ((prev === newline || prev === carriageReturn) && stack.context.depth >= 0) {
    let depth = 0,
      chars = 0;
    for (;;) {
      if (input.next === space) {
        depth++;
      } else if (input.next === tab) {
        depth += 8 - (depth % 8);
      } else {
        break;
      }
      input.advance();
      chars++;
    }
    if (
      depth !== cDepth &&
      input.next !== newline &&
      input.next !== carriageReturn &&
      input.next !== hash
    ) {
      if (depth < cDepth) {
        input.acceptToken(dedent, -chars);
      } else {
        input.acceptToken(indent);
      }
    }
  }
});

class IndentLevel {
  constructor(parent, depth) {
    this.parent = parent;
    // -1 means this is not an actual indent level but a set of brackets
    this.depth = depth;
    this.hash = (parent ? (parent.hash + parent.hash) << 8 : 0) + depth + (depth << 4);
  }
}

const topIndent = new IndentLevel(null, 0);

function countIndent(space) {
  let depth = 0;
  for (let i = 0; i < space.length; i++) {
    depth += space.charCodeAt(i) === tab ? 8 - (depth % 8) : 1;
  }
  return depth;
}

const trackIndent = new ContextTracker({
  start: topIndent,

  reduce(context) {
    return context.depth < 0 ? context.parent : context;
  },

  shift(context, term, stack, input) {
    if (term === indent) {
      return new IndentLevel(context, countIndent(input.read(input.pos, stack.pos)));
    }
    if (term === dedent) {
      return context.parent;
    }

    return context;
  },

  hash(context) {
    return context.hash;
  }
});

const yamlHighlighting = styleTags({
  DocStart: tags.meta,
  DocEnd: tags.meta,
  Key: tags.operator,
  Boolean: tags.bool,
  Null: tags.null,
  Plain: tags.string,
  Number: tags.number,
  FoldOp: tags.operatorKeyword,
  "[ ]": tags.squareBracket,
  "{ }": tags.brace,
  Comment: tags.comment
});

// This file was generated by lezer-generator. You probably shouldn't edit it.
const spec_PlainString = {__proto__:null,true:70, false:70, null:72, "~":72};
const parser = LRParser.deserialize({
  version: 14,
  states: "&rObQbOOOgQbO'#DOQOQbOOOlQbO,59jO!VQdO'#C`OOQ`'#Cs'#CsO!gQbO1G/UOOQ`1G/U1G/UOOQ`'#Cd'#CdOOQ`'#Cf'#CfOOQ`'#Ch'#ChOOQ`'#Cc'#CcO!oQhO'#CjO!tQbO'#CjO!yQdO'#CnO#QQdO'#CqOOQ`'#Cb'#CbO#XQbO,58zOOQ`-E6q-E6qOOQ`7+$p7+$pO#^QbO,59UO#cQcO,59UO#hQbO'#DUOOQ`,59Y,59YO#sQbO,59YOOQ`,59],59]O#xQbO,59]OOQ`1G.f1G.fO#cQcO1G.pO#}]hO'#DTOOQ`1G.p1G.pOtQdO'#CuO$SQbO,59pOOQ`1G.t1G.tOOQ`1G.w1G.wO$_QbO7+$[O$d]`O'#CtO$i]iO,59oOOQ`,59a,59aOOQ`-E6s-E6sOOQ`<<Gv<<GvOO]a,59`,59`OO]a-E6r-E6rOOQ`1G/Z1G/Z",
  stateData: "$v~OqOSnOSPOS~OnOS~ORPO~OmRO~OTSOfVO~OXYOZZO]YOsWOtXO~O_]Oa^Od_Ou[O~PtOTSOfcO~OvdO~OmeO~O`gO~PtOciO~PtOmkO~OmlO~OkmO~OyoO`xXcxX~O`qO~OcrO~OvtO~OyoO`xacxa~OuxO~OmyO~Ol{OvtO~OZXvv~",
  goto: "#XyPPPPzP!O!R!]P!]P!]P!cPPP!cPP!cP!f!l!rPPPPPPPP!xPPPP!{#RTTRURaSQ`SSf^_RvoXZS^_oR`SQURRbUQumRzuQpfRwpRQOQneRslQh^Rj_",
  nodeNames: "âš  Comment Document DocStart Property Key Value Scalar Boolean PlainString Null Number String QuotedString MultiLine FoldOp } { Mapping ] [ Sequence DocEnd",
  maxTerm: 41,
  context: trackIndent,
  nodeProps: [
    ["openedBy", 16,"{",19,"["],
    ["closedBy", 17,"}",20,"]"]
  ],
  propSources: [yamlHighlighting],
  skippedNodes: [0,1],
  repeatNodeCount: 3,
  tokenData: "!2i~RyOX#rXY)eYZ+]Z[#r[])e]^+]^p#rpq)eqr%Wrs.Yst2Rtu#ruw%Wwz#rz{%W{|#r|}5U}!O5x!O!PCZ!P!Q#r!Q!RNq!R![!!}![!]%W!]!^#r!^!`%W!`!a!%i!a!c%W!c!}!'V!}#O!.R#O#P!.r#P#Q!0b#Q#R#r#R#S!'V#S#T#r#T#o!'V#o#p!1R#p#q!%i#q#r!1r#r;'S#r;'S;=`!2c<%lO#rU#wXvSOY$dZ]$d^r$dst%Wt#O$d#O#P'h#P;'S$d;'S;=`)_<%lO$dU$kXXQvSOY$dZ]$d^r$dst%Wt#O$d#O#P'h#P;'S$d;'S;=`)_<%lO$dS%]WvSOY%WZ]%W^r%Ws#O%W#O#P%u#P;'S%W;'S;=`'b<%lO%WS%z[vSOY%WYZ%WZ]%W]^%W^r%Wrs%Ws#O%W#O#P%u#P;'S%W;'S;=`&p;=`<%l%W<%lO%WS&uXvSOY%WZ]%W^r%Ws#O%W#O#P%u#P;'S%W;'S;=`'b;=`<%l%W<%lO%WS'eP;=`<%l%WU'o]XQvSOY$dYZ$dZ]$d]^$d^r$drs$dst$dt#O$d#O#P'h#P;'S$d;'S;=`(h;=`<%l$d<%lO$dU(oYXQvSOY$dZ]$d^r$dst%Wt#O$d#O#P'h#P;'S$d;'S;=`)_;=`<%l$d<%lO$dU)bP;=`<%l$d~)l[vSq~OX%WXY)eZ[%W[])e^p%Wpq)eqr%Ws#O%W#O#P*b#P;'S%W;'S;=`'b<%lO%W~*g[vSOY%WYZ)eZ]%W]^)e^r%Wrs%Ws#O%W#O#P%u#P;'S%W;'S;=`&p;=`<%l%W<%lO%WQ+`WOY+xZ]+x^r+xt#O+x#O#P,g#P;'S+x;'S;=`.S<%lO+xQ+}WXQOY+xZ]+x^r+xt#O+x#O#P,g#P;'S+x;'S;=`.S<%lO+xQ,l[XQOY+xYZ+xZ]+x]^+x^r+xrt+xt#O+x#O#P,g#P;'S+x;'S;=`-b;=`<%l+x<%lO+xQ-gXXQOY+xZ]+x^r+xt#O+x#O#P,g#P;'S+x;'S;=`.S;=`<%l+x<%lO+xQ.VP;=`<%l+x~._Wu~OY.wZ].w^r.wt#O.w#O#P/l#P;'S.w;'S;=`1Y<%lO.w~.zXOY.wZ].w^r.wrs/gt#O.w#O#P/l#P;'S.w;'S;=`1Y<%lO.w~/lO]~~/o]OY.wYZ.wZ].w]^.w^r.wrs0hst.wt#O.w#O#P/l#P;'S.w;'S;=`1`;=`<%l.w<%lO.w~0mX]~OY.wZ].w^r.wrs/gt#O.w#O#P/l#P;'S.w;'S;=`1Y<%lO.w~1]P;=`<%l.w~1cYOY.wZ].w^r.wrs/gt#O.w#O#P/l#P;'S.w;'S;=`1Y;=`<%l.w<%lO.w~2YXvSP~OY2RZ]2R^r2Rrs2us#O2R#O#P3a#P;'S2R;'S;=`5O<%lO2R~2zTP~OY2uZ]2u^;'S2u;'S;=`3Z<%lO2u~3^P;=`<%l2u~3h[vSP~OY2RYZ%WZ]2R]^%W^r2Rrs2Rs#O2R#O#P3a#P;'S2R;'S;=`4^;=`<%l%W<%lO2R~4cXvSOY%WZ]%W^r%Ws#O%W#O#P%u#P;'S%W;'S;=`'b;=`<%l2R<%lO%W~5RP;=`<%l2RV5]XyPvSOY$dZ]$d^r$dst%Wt#O$d#O#P'h#P;'S$d;'S;=`)_<%lO$dV5}^vSOY%WZ]%W^r%Ws}%W}!O6y!O!P8_!P!Q%W!Q!R@}!R![BQ![#O%W#O#P%u#P;'S%W;'S;=`'b<%lO%WT7OYvSOY%WZ]%W^r%Ws}%W}!O7n!O#O%W#O#P%u#P;'S%W;'S;=`'b<%lO%WT7uWRPvSOY%WZ]%W^r%Ws#O%W#O#P%u#P;'S%W;'S;=`'b<%lO%WU8d^vSOY%WZ]%W^r%Ws!Q%W!Q![9`![#O%W#O#P%u#P#]%W#]#^=O#^#b%W#b#c?e#c;'S%W;'S;=`'b<%lO%WU9g^ZQvSOY%WZ]%W^r%Ws!Q%W!Q![9`![!g%W!g!h:c!h#O%W#O#P%u#P#X%W#X#Y:c#Y;'S%W;'S;=`'b<%lO%WU:h^vSOY%WZ]%W^r%Ws{%W{|;d|}%W}!O;d!O!Q%W!Q![<X![#O%W#O#P%u#P;'S%W;'S;=`'b<%lO%WU;iYvSOY%WZ]%W^r%Ws!Q%W!Q![<X![#O%W#O#P%u#P;'S%W;'S;=`'b<%lO%WU<`YZQvSOY%WZ]%W^r%Ws!Q%W!Q![<X![#O%W#O#P%u#P;'S%W;'S;=`'b<%lO%WU=TYvSOY%WZ]%W^r%Ws#O%W#O#P%u#P#b%W#b#c=s#c;'S%W;'S;=`'b<%lO%WU=xYvSOY%WZ]%W^r%Ws#O%W#O#P%u#P#Y%W#Y#Z>h#Z;'S%W;'S;=`'b<%lO%WU>o[ZQvSOY%WZ]%W^r%Ws!g%W!g!h:c!h#O%W#O#P%u#P#X%W#X#Y:c#Y;'S%W;'S;=`'b<%lO%WU?jYvSOY%WZ]%W^r%Ws#O%W#O#P%u#P#T%W#T#U@Y#U;'S%W;'S;=`'b<%lO%WU@_YvSOY%WZ]%W^r%Ws#O%W#O#P%u#P#b%W#b#c>h#c;'S%W;'S;=`'b<%lO%WUAU^ZQvSOY%WZ]%W^r%Ws!O%W!O!P8_!P!g%W!g!h:c!h#O%W#O#P%u#P#X%W#X#Y:c#Y;'S%W;'S;=`'b<%lO%WUBX`ZQvSOY%WZ]%W^r%Ws!O%W!O!P8_!P!Q%W!Q![BQ![!g%W!g!h:c!h#O%W#O#P%u#P#X%W#X#Y:c#Y;'S%W;'S;=`'b<%lO%WVC`avSOY$dZ]$d^r$dst%Wt!O$d!O!PDe!P!Q$d!Q![FT![#O$d#O#P'h#P#]$d#]#^JX#^#b$d#b#cL}#c;'S$d;'S;=`)_<%lO$dVDlZXQvSOY$dZ]$d^r$dst%Wt!O$d!O!PE_!P#O$d#O#P'h#P;'S$d;'S;=`)_<%lO$dVEhXfPXQvSOY$dZ]$d^r$dst%Wt#O$d#O#P'h#P;'S$d;'S;=`)_<%lO$dUF^_ZQXQvSOY$dZ]$d^r$dst%Wt!Q$d!Q![FT![!g$d!g!hG]!h#O$d#O#P'h#P#X$d#X#YG]#Y;'S$d;'S;=`)_<%lO$dUGd_XQvSOY$dZ]$d^r$dst%Wt{$d{|Hc|}$d}!OHc!O!Q$d!Q![I]![#O$d#O#P'h#P;'S$d;'S;=`)_<%lO$dUHjZXQvSOY$dZ]$d^r$dst%Wt!Q$d!Q![I]![#O$d#O#P'h#P;'S$d;'S;=`)_<%lO$dUIfZZQXQvSOY$dZ]$d^r$dst%Wt!Q$d!Q![I]![#O$d#O#P'h#P;'S$d;'S;=`)_<%lO$dUJ`ZXQvSOY$dZ]$d^r$dst%Wt#O$d#O#P'h#P#b$d#b#cKR#c;'S$d;'S;=`)_<%lO$dUKYZXQvSOY$dZ]$d^r$dst%Wt#O$d#O#P'h#P#Y$d#Y#ZK{#Z;'S$d;'S;=`)_<%lO$dULU]ZQXQvSOY$dZ]$d^r$dst%Wt!g$d!g!hG]!h#O$d#O#P'h#P#X$d#X#YG]#Y;'S$d;'S;=`)_<%lO$dUMUZXQvSOY$dZ]$d^r$dst%Wt#O$d#O#P'h#P#T$d#T#UMw#U;'S$d;'S;=`)_<%lO$dUNOZXQvSOY$dZ]$d^r$dst%Wt#O$d#O#P'h#P#b$d#b#cK{#c;'S$d;'S;=`)_<%lO$dUNx_ZQvSOY$dZ]$d^r$dst%Wt!O$d!O!P! w!P!g$d!g!hG]!h#O$d#O#P'h#P#X$d#X#YG]#Y;'S$d;'S;=`)_<%lO$dU!!O_XQvSOY$dZ]$d^r$dst%Wt!Q$d!Q![FT![#O$d#O#P'h#P#]$d#]#^JX#^#b$d#b#cL}#c;'S$d;'S;=`)_<%lO$dU!#UaZQvSOY$dZ]$d^r$dst%Wt!O$d!O!P! w!P!Q$d!Q![!$Z![!g$d!g!hG]!h#O$d#O#P'h#P#X$d#X#YG]#Y;'S$d;'S;=`)_<%lO$dU!$daZQXQvSOY$dZ]$d^r$dst%Wt!O$d!O!P! w!P!Q$d!Q![!$Z![!g$d!g!hG]!h#O$d#O#P'h#P#X$d#X#YG]#Y;'S$d;'S;=`)_<%lO$dU!%p[_QvSOY%WZ]%W^r%Ws{%W{|!&f|}%W}!O!&f!O#O%W#O#P%u#P;'S%W;'S;=`'b<%lO%WU!&mW_QvSOY%WZ]%W^r%Ws#O%W#O#P%u#P;'S%W;'S;=`'b<%lO%WV!'[fvSOX$dXY!(pZ[$d[]!(p^p$dpq!(pqr$dst%Wt!Q$d!Q![!,f![!]!)v!]!c$d!c!}!,f!}#O$d#O#P!+f#P#R$d#R#S!,f#S#T$d#T#o!,f#o;'S$d;'S;=`)_<%lO$dV!(w_XQvSOX$dXY!(pZ[$d[]!(p^p$dpq!(pqr$dst%Wt![$d![!]!)v!]#O$d#O#P!+f#P;'S$d;'S;=`)_<%lO$dV!)}ZXQvSOY$dZ]$d^p$dpq!*pqr$dst%Wt#O$d#O#P'h#P;'S$d;'S;=`)_<%lO$dV!*yXTPXQvSOY$dZ]$d^r$dst%Wt#O$d#O#P'h#P;'S$d;'S;=`)_<%lO$dV!+m]XQvSOY$dYZ!(pZ]$d]^!(p^r$drs$dst$dt#O$d#O#P'h#P;'S$d;'S;=`(h;=`<%l$d<%lO$dV!,mfXQvSOX$dXY!(pZ[$d[]!(p^p$dpq!(pqr$dst%Wt!Q$d!Q![!,f![!]!)v!]!c$d!c!}!,f!}#O$d#O#P!+f#P#R$d#R#S!,f#S#T$d#T#o!,f#o;'S$d;'S;=`)_<%lO$dU!.YWdQvSOY%WZ]%W^r%Ws#O%W#O#P%u#P;'S%W;'S;=`'b<%lO%W~!.w]vSOY$dYZ)eZ]$d]^)e^r$drs%Wst%Wt#O$d#O#P'h#P;'S$d;'S;=`!/p;=`<%l%W<%lO$dU!/uXvSOY%WZ]%W^r%Ws#O%W#O#P%u#P;'S%W;'S;=`'b;=`<%l$d<%lO%WV!0iWcRvSOY%WZ]%W^r%Ws#O%W#O#P%u#P;'S%W;'S;=`'b<%lO%WU!1YWaQvSOY%WZ]%W^r%Ws#O%W#O#P%u#P;'S%W;'S;=`'b<%lO%WV!1yW`RvSOY%WZ]%W^r%Ws#O%W#O#P%u#P;'S%W;'S;=`'b<%lO%WU!2fP;=`<%l#r",
  tokenizers: [indentation, 0, 1, 2, newlines],
  topRules: {"Document":[0,2]},
  specialized: [{term: 9, get: value => spec_PlainString[value] || -1}],
  tokenPrec: 171
});

const YAMLLanguageHighlight = HighlightStyle.define([
    { tag: tags.variableName, color: "#fc6" },
    { tag: tags.operator, color: "#f5d", fontStyle: "italic" }
]);
const YAMLLanguage = LRLanguage.define({
    parser: parser.configure({
        props: [
            styleTags({
                Identifier: tags.variableName,
                UnaryOperator: tags.operator,
                NumOperator: tags.operator,
                StrOperator: tags.operator,
                ListOperator: tags.operator
            })
        ]
    })
});
function YAML() {
    return new LanguageSupport(YAMLLanguage);
}

export { YAML, YAMLLanguage, YAMLLanguageHighlight };
